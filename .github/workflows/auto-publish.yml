name: Auto Publish

on:
  push:
    branches: [main]
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [main]

# Only permissions to create tags and publish to NPM
permissions:
  contents: write # For creating tags
  id-token: write # For NPM provenance

jobs:
  auto-publish:
    runs-on: ubuntu-latest
    # Only run if CI passed and this is a push to main
    if: |
      github.event_name == 'push' && 
      github.ref == 'refs/heads/main' ||
      (github.event_name == 'workflow_run' && 
       github.event.workflow_run.conclusion == 'success' &&
       github.event.workflow_run.head_branch == 'main')

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Check if publish needed
        id: check-publish
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          PUBLISHED_VERSION=$(npm view $(node -p "require('./package.json').name") version 2>/dev/null || echo "0.0.0")
          echo "Current version: $CURRENT_VERSION"
          echo "Published version: $PUBLISHED_VERSION"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "publish_needed=true" >> $GITHUB_OUTPUT
            echo "✅ Version bump detected: $PUBLISHED_VERSION → $CURRENT_VERSION"
          else
            echo "publish_needed=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No version bump needed (current: $CURRENT_VERSION)"
          fi

      - name: Create tag
        if: steps.check-publish.outputs.publish_needed == 'true'
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "v$CURRENT_VERSION"
          git push origin "v$CURRENT_VERSION"

      - name: Publish to NPM
        if: steps.check-publish.outputs.publish_needed == 'true'
        run: npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.check-publish.outputs.publish_needed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.check-publish.outputs.current_version }}
          release_name: Release v${{ steps.check-publish.outputs.current_version }}
          draft: false
          prerelease: false
