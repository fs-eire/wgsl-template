emit("const SCALE_FACTOR: f32 = 1.0;\n");
emit("const OFFSET: f32 = 10.0;\n");
emit("\n");
emit("fn load_data(index: u32) -> f32 {\n");
emit("    return f32(index) * SCALE_FACTOR;\n");
emit("}\n");
emit("\n");
emit("fn process_data(value: f32) -> f32 {\n");
emit("    return value * 2.0 + OFFSET;\n");
emit("}\n");
emit("\n");
emit("fn store_result(index: u32, value: f32) {\n");
emit("\n");
emit("}\n");
emit("\n");
emit("@compute @workgroup_size(64)\n");
emit("fn main(@builtin(global_invocation_id) global_id: vec3<u32>) {\n");
emit("    let index = global_id.x;\n");
emit("    let data = load_data(index);\n");
emit("    let result = process_data(data);\n");
emit("    store_result(index, result);\n");
emit("}\n");